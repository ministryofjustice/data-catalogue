name: DataHub Post Ingestion Validation Checks

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Ingest metadata to prod"] # Name of the first workflow
    types:
      - completed

jobs:
  wait-for-reindex:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for post ingestion opensearch reindex
        run: sleep 3600  # Delay for 60 minutes (3600 seconds)
  run-for-preprod:
    runs-on: ubuntu-latest
    environment: preprod-ingestion
    needs: wait-for-reindex
    outputs:
      preprod_counts: ${{ steps.set_preprod_counts.outputs.preprod_results }}
    steps:
      - uses: actions/checkout@v4

      - name: Install UV
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ vars.UV_VERSION }}
      
      - name: Install Project Dependencies
        run: uv sync --locked

      - name: Query preprod datahub for counts
        env:
          DATAHUB_GMS_TOKEN: ${{ secrets.DATAHUB_GMS_TOKEN }}
          DATAHUB_GMS_URL: ${{ vars.DATAHUB_GMS_URL }}
          PYTHONPATH: ${{ github.workspace }}
        id: set_preprod_counts
        run: |
          uv run python ingestion/post_ingestion_checks.py counts --env preprod \
          --platforms dbt glue justice-data GOV.UK


  run-for-prod:
    runs-on: ubuntu-latest
    environment: prod-ingestion
    needs: [wait-for-reindex, run-for-preprod]
    outputs:
      prod_counts: ${{ steps.set_prod_counts.outputs.prod_results }}
      missing_is_part_of: ${{ steps.set_relations.outputs.missing_is_part_of }}
    steps:
      - uses: actions/checkout@v4

      - name: Install UV
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ vars.UV_VERSION }}
      
      - name: Install Project Dependencies
        run: uv sync --locked

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CADET_METADATA_ROLE_TO_ASSUME }}
          role-duration-seconds: 14400
          aws-region: eu-west-1

      - name: Query prod datahub for counts
        env:
          DATAHUB_GMS_TOKEN: ${{ secrets.DATAHUB_GMS_TOKEN }}
          DATAHUB_GMS_URL: ${{ vars.DATAHUB_GMS_URL }}
          PYTHONPATH: ${{ github.workspace }}
        id: set_prod_counts
        run: |
          uv run python ingestion/post_ingestion_checks.py counts --env prod \
          --platforms dbt glue justice-data GOV.UK

      - name: check datasets' IsPartOf relations
        env:
          DATAHUB_GMS_TOKEN: ${{ secrets.DATAHUB_GMS_TOKEN }}
          DATAHUB_GMS_URL: ${{ vars.DATAHUB_GMS_URL }}
          PYTHONPATH: ${{ github.workspace }}
        id: set_relations
        run: |
          uv run python ingestion/post_ingestion_checks.py relations --env prod \
          --s3-manifest-path "s3://mojap-derived-tables/prod/run_artefacts/deploy-docs/latest/target/manifest.json"


  compare_results:
    runs-on: ubuntu-latest
    outputs:
      comparison_results: ${{ steps.compare_results.outputs.comparison_results }}
    environment: prod-ingestion
    needs: [wait-for-reindex, run-for-preprod, run-for-prod]
    steps:
      - uses: actions/checkout@v4

      - name: Install UV
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ vars.UV_VERSION }}
      
      - name: Install Project Dependencies
        run: uv sync --locked

      - name: Compare results
        env:
          PYTHONPATH: ${{ github.workspace }}
        id: compare_results
        run: |
          uv run python ingestion/post_ingestion_checks.py compare \
          --platforms dbt glue justice-data GOV.UK \
          --prod-results '${{ needs.run-for-prod.outputs.prod_counts }}' \
          --preprod-results '${{ needs.run-for-preprod.outputs.preprod_counts }}'

  post_ingestion_checks_report:
    runs-on: ubuntu-latest
    environment: prod-ingestion
    needs: [wait-for-reindex, run-for-prod, compare_results]
    steps:
      - uses: actions/checkout@v4
      - name: Report datasets with missing container relationships
        run: |
          echo 'Missing IsPartOf relations: ${{ needs.run-for-prod.outputs.missing_is_part_of }}'
      - name: Report on prod vs preprod comparison results
        run: |
          echo 'Comparison results: ${{ needs.compare_results.outputs.comparison_results }}'
